name: draft-pr-releases
on:
  pull_request:
    types: [opened, synchronize]

env:
  NODEJS_VERSION: 14
  NODEJS_DOCKER_IMAGE: node

jobs:
  build-linux:
    name: Build linux release artifacts
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Make git short-commit/pr-number available to different steps
      id: metadata
      run: |
        echo "::set-output name=commit::$(echo ${GITHUB_SHA} | head -c7)"
        echo "::set-output name=pr_number::$(echo $GITHUB_REF | awk -F/ '{print $3}')"
    - name: Build
      env:
        PLATFORM: linux
        RELEASE_TAG: "pr-${{ steps.metadata.outputs.pr_number }}"
      run: |
        pwd
        ls -hal
        git status -sb
        mkdir release-files
        docker run -i --rm \
          -v ${PWD}:/src \
          -w /src \
          --entrypoint bash \
          ${NODEJS_DOCKER_IMAGE}:${NODEJS_VERSION} \
          -c "npm i && npm run binaries:${PLATFORM} && npm run electron:build"
        cp -a dist_electron/*AppImage release-files/lift-wallet-${PLATFORM}-${RELEASE_TAG}.AppImage
    - name: Upload built artifacts
      uses: actions/upload-artifact@v2
      with:
        name: release-files
        path: release-files
        retention-days: 7

  build-macos:
    name: Build macos release artifacts
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Make git short-commit/pr-number available to different steps
      id: metadata
      run: |
        echo "::set-output name=commit::$(echo ${GITHUB_SHA} | head -c7)"
        echo "::set-output name=pr_number::$(echo $GITHUB_REF | awk -F/ '{print $3}')"
    - name: Install depends
      run: |
        brew install nvm
        export NVM_DIR=~/.nvm
        source $(brew --prefix nvm)/nvm.sh
        nvm install ${NODEJS_VERSION}
    - name: Build
      env:
        PLATFORM: macos
        RELEASE_TAG: "pr-${{ steps.metadata.outputs.pr_number }}"
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        pwd
        ls -hal
        git status -sb
        mkdir -p release-files
        export NVM_DIR=~/.nvm
        source $(brew --prefix nvm)/nvm.sh
        nvm use ${NODEJS_VERSION}
        npm i
        npm run binaries:${PLATFORM}
        npm run electron:build
        cp -a dist_electron/*dmg release-files/lift-wallet-${PLATFORM}-${RELEASE_TAG}.dmg
    - name: Upload built artifacts
      uses: actions/upload-artifact@v2
      with:
        name: release-files
        path: release-files
        retention-days: 7

  draft-release:
    name: Draft release artifacts
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos]
    steps:
    - uses: actions/checkout@v2
    - name: Make git short-commit/pr-number available to different steps
      id: metadata
      run: |
        echo "::set-output name=commit::$(echo ${GITHUB_SHA} | head -c7)"
        echo "::set-output name=pr_number::$(echo $GITHUB_REF | awk -F/ '{print $3}')"
    - name: Download release artifacts
      uses: actions/download-artifact@v2
      with:
        name: release-files
        path: release-files
    - name: Release PR draft
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_TAG: "pull-request-${{ steps.metadata.outputs.pr_number }}"
        RELEASE_NAME: "Release ${{ steps.metadata.outputs.pr_number }}-${{ steps.metadata.outputs.commit }}"
        RELEASE_NOTES: "Automatic release from GH action on this project."
      run: |
        sudo apt install -y npm tree
        sudo npm install -g publish-release
        set -x
        GITHUB_OWNER=$(echo ${GITHUB_REPOSITORY} | awk -F/ '{print $1}')
        GITHUB_REPO=$(echo ${GITHUB_REPOSITORY} | awk -F/ '{print $2}')
        git tag ${RELEASE_TAG}
        echo '{}' > package.json
        publish-release \
          --draft \
          --reuseRelease \
          --reuseDraftOnly \
          --tag ${RELEASE_TAG} \
          --owner ${GITHUB_OWNER} \
          --repo ${GITHUB_REPO} \
          --token ${GITHUB_TOKEN} \
          --name "${RELEASE_NAME}" \
          --notes "${RELEASE_NOTES}" \
          --assets $(ls release-files/* | xargs echo | sed 's| |,|g')

